"use strict";(self.webpackChunkadminapp_docs=self.webpackChunkadminapp_docs||[]).push([[3739],{2592:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api-reference/client/schema-experience-builder/index","title":"Schema Experience Builder","description":"SchemaExperienceBuilder is a class that helps you to define experiences for the schema. It is used to define form, view, and other experiences for the schema.","source":"@site/docs/api-reference/client/schema-experience-builder/index.md","sourceDirName":"api-reference/client/schema-experience-builder","slug":"/api-reference/client/schema-experience-builder/","permalink":"/docs/api-reference/client/schema-experience-builder/","draft":false,"unlisted":false,"editUrl":"https://github.com/headless-adminapp/headless-adminapp.github.io/tree/main/docs/api-reference/client/schema-experience-builder/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Icon","permalink":"/docs/api-reference/client/icon"},"next":{"title":"defineExperience","permalink":"/docs/api-reference/client/schema-experience-builder/define-experience"}}');var c=i(4848),a=i(8453);const s={},t="Schema Experience Builder",l={},d=[{value:"Available methods",id:"available-methods",level:4},{value:"Example",id:"example",level:4}];function o(e){const n={a:"a",code:"code",h1:"h1",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"schema-experience-builder",children:"Schema Experience Builder"})}),"\n",(0,c.jsx)(n.p,{children:"SchemaExperienceBuilder is a class that helps you to define experiences for the schema. It is used to define form, view, and other experiences for the schema."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"import { SchemaExperienceBuilder } from '@headless-adminapp/app/builders';\nimport { taskSchema } from '../schema/task';\n\nconst builder = new SchemaExperienceBuilder(taskSchema);\n"})}),"\n",(0,c.jsx)(n.h4,{id:"available-methods",children:"Available methods"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"/docs/api-reference/client/schema-experience-builder/define-experience",children:"defineExperience"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"/docs/api-reference/client/schema-experience-builder/define-form-experience",children:"defineFormExperience"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"/docs/api-reference/client/schema-experience-builder/define-view-experience",children:"defineViewExperience"})}),"\n"]}),"\n",(0,c.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",metastring:'title="experience/task.ts"',children:"const TaskIcon = bundleLazyIcon(\n  'Task24Regular',\n  'Task24Filled'\n);\n\nexport const taskSchemaExperience = builder.defineExperience({\n  Icon: TaskIcon,\n  views: [{\n    id: 'default',\n    name: 'All Tasks',\n    experience: builder.defineViewExperience({\n      defaultSorting: [\n        {\n          field: 'created_at',\n          order: 'desc',\n        },\n      ],\n      grid: {\n        columns: ['title', 'created_at']\n      }\n    }),\n  }],\n  forms: [{\n    id: 'default',\n    name: 'Task Form',\n    experience: builder.defineFormExperience({\n      tabs: [\n        name: 'general',\n        label: 'General',\n        controls: ['title'],\n      ],\n      useHookFn: useCustomHook, // Optional\n    }),\n  }],\n});\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>t});var r=i(6540);const c={},a=r.createContext(c);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);