"use strict";(self.webpackChunkadminapp_docs=self.webpackChunkadminapp_docs||[]).push([[1640],{4851:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"getting-started/pages/listing","title":"Listing page","description":"Listing page is a page that displays a list of records of a specific entity includes search, filter, and pagination features.","source":"@site/docs/getting-started/pages/listing.md","sourceDirName":"getting-started/pages","slug":"/getting-started/pages/listing","permalink":"/docs/getting-started/pages/listing","draft":false,"unlisted":false,"editUrl":"https://github.com/headless-adminapp/headless-adminapp.github.io/tree/main/docs/getting-started/pages/listing.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"App Layout","permalink":"/docs/getting-started/setup-layout"},"next":{"title":"Form page","permalink":"/docs/getting-started/pages/form"}}');var a=n(4848),s=n(8453);const r={sidebar_position:1},o="Listing page",d={},c=[];function p(e){const t={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"listing-page",children:"Listing page"})}),"\n",(0,a.jsx)(t.p,{children:"Listing page is a page that displays a list of records of a specific entity includes search, filter, and pagination features."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",metastring:'title="app/data/[logicalName]/page.tsx"',children:"'use client';\n\nimport { useState } from 'react';\nimport { PageEntityView } from '@headless-adminapp/fluent/PageEntityView';\n\nexport default function Page(props: { params: { logicalName: string } }) {\n  const [viewId, setViewId] = useState<string | undefined>(undefined);\n\n  return (\n    <PageEntityView\n      logicalName={props.params.logicalName}\n      viewId={viewId}\n      onChangeView={setViewId}\n    />\n  );\n}\n"})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"app/data/[logicalName]/page.tsx"})," is recommended but can be changed to different path. In case of changing the page, you must configure ",(0,a.jsx)(t.code,{children:"routeResolver"})," and ",(0,a.jsx)(t.code,{children:"isRouteActive"})," in AppLayout."]}),"\n"]})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(6540);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);