"use strict";(self.webpackChunkadminapp_docs=self.webpackChunkadminapp_docs||[]).push([[8797],{3846:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"getting-started/configuration/server/plugin","title":"Plugin","description":"Plugin Store","source":"@site/docs/getting-started/configuration/server/plugin.md","sourceDirName":"getting-started/configuration/server","slug":"/getting-started/configuration/server/plugin","permalink":"/docs/getting-started/configuration/server/plugin","draft":false,"unlisted":false,"editUrl":"https://github.com/headless-adminapp/headless-adminapp.github.io/tree/main/docs/getting-started/configuration/server/plugin.md","tags":[],"version":"current","sidebarPosition":21,"frontMatter":{"sidebar_position":21},"sidebar":"tutorialSidebar","previous":{"title":"Mongo Schema Store","permalink":"/docs/getting-started/configuration/server/mongo-schema-store"},"next":{"title":"App Layout","permalink":"/docs/getting-started/setup-layout"}}');var o=n(4848),s=n(8453);const i={sidebar_position:21},a="Plugin",c={},l=[{value:"Plugin Store",id:"plugin-store",level:3},{value:"Attach Plugin Store to sdk",id:"attach-plugin-store-to-sdk",level:3}];function g(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"plugin",children:"Plugin"})}),"\n",(0,o.jsx)(t.h3,{id:"plugin-store",children:"Plugin Store"}),"\n",(0,o.jsx)(t.p,{children:"The plugin store is a place where you can register your custom logic to run before or after the execution of a specific message. You can register multiple plugins for the same message and stage."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="config/plugins/store.ts"',children:"import {\n  DatabaseContext,\n  ExecutionStage,\n  MessageName,\n  PluginStore,\n  ServerSdkContext,\n} from '@headless-adminapp/server-sdk';\n\nexport const pluginStore = new PluginStore<ServerSdkContext, DatabaseContext>();\n\npluginStore.register({\n  logicalName: '',\n  messageName: MessageName.Create,\n  stage: ExecutionStage.PreOperation,\n  attributes: [],\n  action: async (context) => {\n    console.log(\n      'I will run before create record for any record'\n    );\n  },\n});\n\npluginStore.register({\n  logicalName: 'tasks',\n  messageName: MessageName.Create,\n  stage: ExecutionStage.PostOperation,\n  attributes: [],\n  action: async (context) => {\n    console.log(\n      'I will run after create record for task record'\n    );\n  },\n});\n"})}),"\n",(0,o.jsx)(t.h3,{id:"attach-plugin-store-to-sdk",children:"Attach Plugin Store to sdk"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="data/route.ts"',children:"const sdk: IServerSdk = new MongoServerSdk<SdkContext>({\n  schemaStore,\n  pluginStore,\n});\n"})}),"\n",(0,o.jsxs)(t.p,{children:["API Reference: ",(0,o.jsx)(t.a,{href:"/docs/api-reference/plugin",children:"Plugin"})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(6540);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);