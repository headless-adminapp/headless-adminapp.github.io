"use strict";(self.webpackChunkadminapp_docs=self.webpackChunkadminapp_docs||[]).push([[3480],{9758:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>n,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api-reference/data/data-service/index","title":"Data Service","description":"The IDataService interface provides methods for interacting with data records. It includes methods for creating, updating, deleting, and retrieving records.","source":"@site/docs/api-reference/data/data-service/index.md","sourceDirName":"api-reference/data/data-service","slug":"/api-reference/data/data-service/","permalink":"/docs/api-reference/data/data-service/","draft":false,"unlisted":false,"editUrl":"https://github.com/headless-adminapp/headless-adminapp.github.io/tree/main/docs/api-reference/data/data-service/index.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"SequelizeServerSdk","permalink":"/docs/api-reference/data/server-sdk/sequelize-server-sdk"},"next":{"title":"Delete Record","permalink":"/docs/api-reference/data/data-service/delete-record"}}');var i=a(4848),d=a(8453);const n={sidebar_position:2},s="Data Service",c={},o=[{value:"Available Implementations",id:"available-implementations",level:2},{value:"RestDataService",id:"restdataservice",level:4},{value:"Available Methods",id:"available-methods",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"data-service",children:"Data Service"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"IDataService"})," interface provides methods for interacting with data records. It includes methods for creating, updating, deleting, and retrieving records."]}),"\n",(0,i.jsx)(r.h2,{id:"available-implementations",children:"Available Implementations"}),"\n",(0,i.jsx)(r.h4,{id:"restdataservice",children:"RestDataService"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"const dataService = new RestDataService({\n  endpoint: '/api/data',\n});\n"})}),"\n",(0,i.jsx)(r.h3,{id:"available-methods",children:"Available Methods"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"retrive-record",children:"retriveRecord"})," - Retrieves a single record based on the provided parameters."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"retrive-records",children:"retriveRecords"})," - Retrieves multiple records based on the provided parameters."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"create-record",children:"createRecord"})," - Creates a new record based on the provided parameters."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"update-record",children:"updateRecord"})," - Updates an existing record based on the provided parameters."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"delete-record",children:"deleteRecord"})," - Deletes a record based on the provided parameters."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,r,a)=>{a.d(r,{R:()=>n,x:()=>s});var t=a(6540);const i={},d=t.createContext(i);function n(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);