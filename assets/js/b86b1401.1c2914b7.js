"use strict";(self.webpackChunkadminapp_docs=self.webpackChunkadminapp_docs||[]).push([[107],{1808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting-started/configuration/client/store","title":"Stores","description":"Basically we have 3 types of stores in client side:","source":"@site/docs/getting-started/configuration/client/store.md","sourceDirName":"getting-started/configuration/client","slug":"/getting-started/configuration/client/store","permalink":"/docs/getting-started/configuration/client/store","draft":false,"unlisted":false,"editUrl":"https://github.com/headless-adminapp/headless-adminapp.github.io/tree/main/docs/getting-started/configuration/client/store.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"App Experience","permalink":"/docs/getting-started/configuration/client/app"},"next":{"title":"Data Service","permalink":"/docs/getting-started/configuration/client/data-service"}}');var r=n(4848),s=n(8453);const a={sidebar_position:3},o="Stores",c={},l=[{value:"Schema Store",id:"schema-store",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"stores",children:"Stores"})}),"\n",(0,r.jsx)(t.p,{children:"Basically we have 3 types of stores in client side:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Schema Store - Store for schema information in client side."}),"\n",(0,r.jsx)(t.li,{children:"Client Experience Store - Store for client experience information in client side."}),"\n",(0,r.jsx)(t.li,{children:"App Store - Store for app information in client side."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"schema-store",children:"Schema Store"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:'title="task.ts"',children:"import { InferredSchemaType } from '@headless-adminapp/core/schema';\nimport { defineSchema } from '@headless-adminapp/core/schema/utils';\n\nexport const taskSchema = defineSchema({\n  logicalName: 'tasks',\n  label: 'Task',\n  pluralLabel: 'Tasks',\n  idAttribute: '_id',\n  primaryAttribute: 'title',\n  attributes: {\n    _id: {\n      type: 'id',\n      label: 'Id',\n      required: true,\n      readonly: true,\n      objectId: true,\n    },\n    title: {\n      type: 'string',\n      format: 'text',\n      label: 'Name',\n    },\n  },\n});\n\nexport type TaskAttributes = (typeof taskSchema)['attributes'];\nexport type Task = InferredSchemaType<TaskAttributes>;\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:'title="clientSchemaStore.ts"',children:"import { SchemaStore } from '@headless-adminapp/core/store';\n\nexport const clientSchemaStore = new SchemaStore();\n\nclientSchemaStore.register(taskSchema);\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(6540);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);