"use strict";(self.webpackChunkadminapp_docs=self.webpackChunkadminapp_docs||[]).push([[7028],{8161:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"getting-started/configuration/client/app-experience","title":"App Experience","description":"","source":"@site/docs/getting-started/configuration/client/app-experience.md","sourceDirName":"getting-started/configuration/client","slug":"/getting-started/configuration/client/app-experience","permalink":"/docs/getting-started/configuration/client/app-experience","draft":false,"unlisted":false,"editUrl":"https://github.com/headless-adminapp/headless-adminapp.github.io/tree/main/docs/getting-started/configuration/client/app-experience.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Schema Experience","permalink":"/docs/getting-started/configuration/client/schema-experience"},"next":{"title":"Stores","permalink":"/docs/getting-started/configuration/client/store"}}');var a=t(4848),o=t(8453);const r={sidebar_position:3},s="App Experience",c={},p=[];function d(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"app-experience",children:"App Experience"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="app/default.ts"',children:"export const defaultApp: AppExperience = {\n  id: 'default',\n  logo: {\n    image: 'https://example.com/logo.png',\n  },\n  title: 'Headless Admin App',\n  quickActionItems: [], // Quick action items showen in the header\n  navItems: navPageGroupAreas, // Navigation items shown in the sidebar\n  viewCommands: commands.view, // Default command bar items for listing views\n  formCommands: commands.form, // Default command bar items for form\n  subgridCommands: commands.subgrid, // Default command bar items for subgrid\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="navigations.ts"',children:"import {\n  NavPageGroupArea,\n  PageType,\n} from '@headless-adminapp/core/experience/app';\n\nexport const navPageGroupAreas: NavPageGroupArea[] = [\n  {\n    label: 'Main',\n    groups: [\n      {\n        label: 'Data',\n        items: [\n          {\n            type: PageType.EntityView,\n            logicalName: 'tasks',\n          },\n        ],\n      },\n    ],\n  },\n];\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",metastring:'title="commands.ts"',children:"import { DefaultCommandBuilder } from '@headless-adminapp/app/builders/CommandBuilder/DefaultCommandBuilder';\nimport { iconSet } from '@headless-adminapp/icons-fluent';\n\nexport const commands = DefaultCommandBuilder.createDefaultCommands({\n  icons: {\n    Delete: iconSet.Delete,\n    Edit: iconSet.Edit,\n    Export: iconSet.Export,\n    ExportCsv: iconSet.ExportCsv,\n    ExportExcel: iconSet.ExportExcel,\n    New: iconSet.Add,\n    Refresh: iconSet.Refresh,\n    Save: iconSet.Save,\n    SaveAndClose: iconSet.Save,\n  },\n});\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(6540);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);