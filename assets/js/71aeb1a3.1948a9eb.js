"use strict";(self.webpackChunkadminapp_docs=self.webpackChunkadminapp_docs||[]).push([[9454],{6271:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"getting-started/configuration/schema","title":"Schema","description":"Schema is a set of rules that defines the structure of the data. It is used to validate the data and to ensure that the data is consistent. In Headless AdminApp, schema is used to define the structure of the data that is stored in the database.","source":"@site/docs/getting-started/configuration/schema.md","sourceDirName":"getting-started/configuration","slug":"/getting-started/configuration/schema","permalink":"/docs/getting-started/configuration/schema","draft":false,"unlisted":false,"editUrl":"https://github.com/headless-adminapp/headless-adminapp.github.io/tree/main/docs/getting-started/configuration/schema.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Configurations","permalink":"/docs/getting-started/configuration/"},"next":{"title":"Schema Experience","permalink":"/docs/getting-started/configuration/schema-experience"}}');var s=a(4848),i=a(8453);const r={sidebar_position:1},o="Schema",d={},c=[];function h(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"schema",children:"Schema"})}),"\n",(0,s.jsx)(t.p,{children:"Schema is a set of rules that defines the structure of the data. It is used to validate the data and to ensure that the data is consistent. In Headless AdminApp, schema is used to define the structure of the data that is stored in the database."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:'title="schema/task.ts"',children:"import { InferredSchemaType } from '@headless-adminapp/core/schema';\nimport { defineSchema } from '@headless-adminapp/core/schema/utils';\n\nexport const taskSchema = defineSchema({\n  logicalName: 'tasks',\n  label: 'Task',\n  pluralLabel: 'Tasks',\n  idAttribute: '_id',\n  primaryAttribute: 'title',\n  attributes: {\n    _id: {\n      type: 'id',\n      label: 'Id',\n      required: true,\n      readonly: true,\n      objectId: true,\n    },\n    title: {\n      type: 'string',\n      format: 'text',\n      label: 'Name',\n    },\n  },\n});\n\nexport type TaskAttributes = (typeof taskSchema)['attributes'];\nexport type Task = InferredSchemaType<TaskAttributes>;\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>o});var n=a(6540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);